{"version":3,"sources":["ViewPage.js","MainPage.js","Login.js","serviceWorker.js","index.js"],"names":["styles","dropdown","marginTop","ViewPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickMission","event","setState","tablename","toggle","bind","assertThisInitialized","state","dropdownOpen","axios","post","workid","res","console","log","body","prevState","react_default","a","createElement","Grid_default","Dropdown","isOpen","style","DropdownToggle","caret","DropdownMenu","DropdownItem","onClick","Component","root","flexGrow","grow","Button","marginLeft","ButtonF","content","paddingLeft","paddingRight","MainPage","clearUser","Logout","onClickFunc","target","innerHTML","viewStatus","renderContent","src_ViewPage","className","AppBar_default","position","Toolbar_default","Typography_default","variant","color","Button_default","container","React","Login","page","onChange","value","grid","justifyContent","width","margin","textAlign","backgroundColor","height","renderLogin","component","gutterBottom","TextField_default","required","id","label","defaultValue","renderMain","src_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","src_Login","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.101737a9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\nconst styles = {\r\n  dropdown: {\r\n    marginTop: \"30px\"\r\n  }\r\n};\r\nclass ViewPage extends Component {\r\n  async componentWillMount() {\r\n    const res = await axios.post(\"/~mswanso2/view_route.php\", {\r\n      workid: \"123\",\r\n      tablename: \"MISSION\"\r\n    });\r\n    console.log(res.body);\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      dropdownOpen: false,\r\n      tablename: \"\"\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  }\r\n\r\n  onClickMission = event => {\r\n    this.setState({\r\n      tablename: \"MISSON\"\r\n    });\r\n    //  console.log(\"mission\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Dropdown\r\n          isOpen={this.state.dropdownOpen}\r\n          toggle={this.toggle}\r\n          style={styles.dropdown}\r\n        >\r\n          <DropdownToggle caret>\r\n            Choose What you would like to see\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem onClick={this.onClickMission}>Mission</DropdownItem>\r\n            <DropdownItem>Project</DropdownItem>\r\n            <DropdownItem>Works_on</DropdownItem>\r\n            <DropdownItem>Employee</DropdownItem>\r\n            <DropdownItem>Contractor</DropdownItem>\r\n            <DropdownItem>Supplies</DropdownItem>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewPage;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\nimport ViewPage from \"./ViewPage\";\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  Button: {\r\n    marginLeft: \"20px\"\r\n  },\r\n  ButtonF: {\r\n    marginLeft: \"200px\"\r\n  },\r\n  content: {\r\n    paddingLeft: \"100px\",\r\n    paddingRight: \"100px\"\r\n  }\r\n};\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      viewStatus: \"View\"\r\n    };\r\n    //   this.toggle = this.toggle.bind(this);\r\n    //   this.state = {\r\n    //     dropdownOpen: false\r\n    //   };\r\n    // }\r\n    //\r\n    // toggle() {\r\n    //   this.setState(prevState => ({\r\n    //     dropdownOpen: !prevState.dropdownOpen\r\n    //   }));\r\n  }\r\n\r\n  onClick = () => {\r\n    this.props.clearUser();\r\n    this.props.Logout();\r\n  };\r\n\r\n  onClickFunc = event => {\r\n    console.log(event.target.innerHTML);\r\n    this.setState({\r\n      viewStatus: event.target.innerHTML\r\n    });\r\n  };\r\n  renderContent = () => {\r\n    if (this.state.viewStatus === \"View\") {\r\n      return <ViewPage />;\r\n    } else if (this.state.viewStatus === \"Add\") {\r\n      return <p>This is Add page</p>;\r\n    } else if (this.state.viewStatus === \"Delete\") {\r\n      return <p>This is Delete page</p>;\r\n    } else if (this.state.viewStatus === \"Update\") {\r\n      return <p>This is Update page</p>;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={styles.grow}>\r\n              {this.props.workid}\r\n            </Typography>\r\n            <Button\r\n              color=\"inherit\"\r\n              style={styles.Button}\r\n              onClick={this.onClick}\r\n            >\r\n              Logout\r\n            </Button>\r\n\r\n            <Grid>\r\n              <Button\r\n                color=\"inherit\"\r\n                style={styles.ButtonF}\r\n                onClick={this.onClickFunc}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                color=\"inherit\"\r\n                style={styles.Button}\r\n                onClick={this.onClickFunc}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                color=\"inherit\"\r\n                style={styles.Button}\r\n                onClick={this.onClickFunc}\r\n              >\r\n                Update\r\n              </Button>\r\n              <Button\r\n                color=\"inherit\"\r\n                style={styles.Button}\r\n                onClick={this.onClickFunc}\r\n              >\r\n                View\r\n              </Button>\r\n            </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Grid container style={styles.content}>\r\n          {this.renderContent()}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n\r\n//\r\n// <DropdownItem header>Header</DropdownItem>\r\n// <DropdownItem>Some Action</DropdownItem>\r\n// <DropdownItem disabled>Action (disabled)</DropdownItem>\r\n// <DropdownItem divider />\r\n// <DropdownItem>Foo Action</DropdownItem>\r\n// <DropdownItem>Bar Action</DropdownItem>\r\n// <DropdownItem>Quo Action</DropdownItem>\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MainPage from \"./MainPage\";\r\nclass Login extends Component {\r\n  state = {\r\n    workid: \"\",\r\n    page: \"login\"\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({\r\n      workid: event.target.value\r\n    });\r\n  };\r\n\r\n  onClick = event => {\r\n    console.log(this.state.workid);\r\n    //posting the things to the backend\r\n    this.setState({\r\n      page: \"main\"\r\n    });\r\n  };\r\n\r\n  styles = {\r\n    grid: {\r\n      justifyContent: \"center\",\r\n      width: \"75%\",\r\n      margin: \"auto\",\r\n      textAlign: \"center\",\r\n      marginTop: \"200px\"\r\n    },\r\n    container: {\r\n      backgroundColor: \"lightblue\",\r\n      height: \"100vh\"\r\n    }\r\n  };\r\n\r\n  Logout = () => {\r\n    this.setState({\r\n      page: \"login\"\r\n    });\r\n  };\r\n  renderLogin = () => {\r\n    return (\r\n      <Grid style={this.styles.container} container>\r\n        <Grid style={this.styles.grid}>\r\n          <Typography component=\"h2\" variant=\"h3\" gutterBottom>\r\n            The National Aeronautics and Space Administration\r\n          </Typography>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Please Login below with workid\r\n          </Typography>\r\n          <TextField\r\n            required\r\n            id=\"outlined-required\"\r\n            label=\"Required\"\r\n            defaultValue={this.state.workid}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            onChange={this.onChange}\r\n          />\r\n          <br />\r\n          <Button variant=\"contained\" component=\"span\" onClick={this.onClick}>\r\n            Login\r\n          </Button>\r\n          <br />\r\n          <Typography style={{ marginTop: \"30px\" }} gutterBottom>\r\n            This site is a highly classified site, any attempt to temper with\r\n            this site is illegal\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  clearUser = () => {\r\n    this.setState({\r\n      workid: \"\"\r\n    });\r\n  };\r\n\r\n  renderMain = () => {\r\n    return (\r\n      <MainPage\r\n        Logout={this.Logout}\r\n        workid={this.state.workid}\r\n        clearUser={this.clearUser}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.page === \"login\") {\r\n      return this.renderLogin();\r\n    } else if (this.state.page === \"main\") {\r\n      return this.renderMain();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { BrowserRouter, Route, Link } from \"react-router-dom\";\n// import { Switch } from \"react-router\";\nimport Login from \"./Login\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <div>\n    <Login />\n  </div>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}